# Dockerfile untuk Frontend Next.js
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Build the app
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set build-time environment variables
ARG NEXT_PUBLIC_CHATBOT_API_URL=http://10.11.1.207:8012
ARG NEXT_PUBLIC_TOOL_API_URL=http://10.11.1.207:8011
ENV NEXT_PUBLIC_CHATBOT_API_URL=$NEXT_PUBLIC_CHATBOT_API_URL
ENV NEXT_PUBLIC_TOOL_API_URL=$NEXT_PUBLIC_TOOL_API_URL

# Build Next.js app
RUN npm run build

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Set runtime environment variables
ENV NEXT_PUBLIC_CHATBOT_API_URL=http://10.11.1.207:8012
ENV NEXT_PUBLIC_TOOL_API_URL=http://10.11.1.207:8011

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built app
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 8013

ENV PORT=8013
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]